<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WPR.Controls"
                    xmlns:helpers="clr-namespace:WPR.Helpers"
                    x:Class="WPR.Styles.Toggles">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Base.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="WPRToggleControlTemplate" TargetType="{x:Type ToggleButton}">
        <controls:ClippingBorder ClipToBounds="True"
                                    CornerRadius="{Binding Path=(helpers:ButtonHelper.BorderRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Background="Transparent">
                <Canvas>
                    <Ellipse UseLayoutRounding="False" SnapsToDevicePixels="False" x:Name="PART_ellipse"
                             Canvas.Left="-5000" Canvas.Top="-5000"
                                Fill="{Binding Path=(helpers:RippleHelper.FeedbackBrush), RelativeSource={RelativeSource TemplatedParent}}"  
                                Opacity="0.6"
                                Width="10000" Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}"
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <ScaleTransform ScaleX="0" ScaleY="{Binding RelativeSource={RelativeSource Self}, Path=ScaleX}" x:Name="EllipseScale"/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Canvas>
                <Border Background="{DynamicResource AnimationEnterColorBrush}"
                    IsHitTestVisible="False"
                    Opacity="0"
                    x:Name="IsCheckedBorder"/>
                <ContentPresenter Margin="{TemplateBinding Padding}"                                         
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </controls:ClippingBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" 
                                             To="1" 
                                             Storyboard.TargetName="EllipseScale"
                                             Storyboard.TargetProperty="ScaleX"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.3" 
                                             Storyboard.TargetName="EllipseScale"
                                             Storyboard.TargetProperty="ScaleX"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" 
                                             To="0.3" 
                                             Storyboard.TargetName="IsCheckedBorder"
                                             Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" 
                                             Storyboard.TargetName="IsCheckedBorder"
                                             Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--Переключатель-->
    <Style x:Key="WPRToggleButton" TargetType="{x:Type ToggleButton}"  BasedOn="{StaticResource BaseControl}">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="helpers:RippleHelper.FeedbackBrush" Value="{StaticResource AnimationEnterColorBrush}"/>
        <EventSetter Event="PreviewMouseLeftButtonUp" Handler="WPRToggleButton_MouseUp"/>
        <Setter Property="Template" Value="{StaticResource WPRToggleControlTemplate}"/>
    </Style>
    

    <!--Material Switcher-->
  <Style x:Key="WPRSwitchToggleButton" TargetType="{x:Type ToggleButton}"  BasedOn="{StaticResource WPRToggleButton}">
        <Setter Property="helpers:RippleHelper.FeedbackBrush" Value="{StaticResource PrimaryColorBrush}"/>
        <EventSetter Event="PreviewMouseLeftButtonUp" Handler="WPRSwither_MouseUp"/>
        <Setter Property="Template">
    <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Background="Transparent" Cursor="Hand">
                            <Border Background="{DynamicResource SecondaryColorBrush}"
                                    x:Name="Border"
                                    VerticalAlignment="Center"
                                    Margin="6"
                                    Height="10" Width="24" 
                                    CornerRadius="5" />
                            <Grid HorizontalAlignment="Left">
                                <controls:Ripple x:Name="Ripple"
                                         VerticalAlignment="Center"
                                         Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(helpers:RippleHelper.FeedbackBrush)}" 
                                         RippleInCenter="True"
                                         StartRippleOnClick="False" />
                                <Ellipse x:Name="Ellipse" Width="18" Height="18" Fill="{DynamicResource BackgroundColorBrush}" 
                                         Stroke="{DynamicResource SecondaryColorBrush}"
                                         Effect="{DynamicResource SmallShadow}"
                                         Margin="2"/>
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="Translategrid" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>
                        <ContentPresenter Grid.Column="1" Margin="3,0,0,0" RecognizesAccessKey="True" VerticalAlignment="Center" IsHitTestVisible="False"/>
                    </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource DarkPrimaryColorBrush}" />
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource LightPrimaryColorBrush}" />
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" 
                                                 To="16" 
                                                 Storyboard.TargetName="Translategrid"
                                                 Storyboard.TargetProperty="X"/>
                                <!--<ColorAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill.Color"
                                                To="{DynamicResource DarkPrimaryColor}"
                                                Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color"
                                                To="{DynamicResource LightPrimaryColor}"
                                                Duration="0:0:0.2"/>-->
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" 
                                                 Storyboard.TargetName="Translategrid"
                                                 Storyboard.TargetProperty="X"/>
                                <!--<ColorAnimation Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill.Color"
                                                Duration="0:0:0.2"/>
                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color"
                                                Duration="0:0:0.2"/>-->
                                    </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

</ControlTemplate.Triggers>
        </ControlTemplate>
    </Setter.Value>
</Setter>
    </Style>

</ResourceDictionary>