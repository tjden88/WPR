<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helpers="clr-namespace:WPR.Helpers"
                    xmlns:controls="clr-namespace:WPR.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Base.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WPRComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource BaseControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="16 8" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid x:Name="GridWrapper">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="MouseOverBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.18" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="MouseOverBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True" />

                        <Border x:Name="MouseOverBorder"
                    Background="{TemplateBinding Foreground}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Opacity="0"
                    SnapsToDevicePixels="True" />
                        <Border x:Name="SelectedBorder"
                    Background="{TemplateBinding Foreground}"
                    Opacity="0"
                    RenderTransformOrigin="0.5,0.5" />
                        <controls:ClippingBorder ClipToBounds="True" CornerRadius="0">
                            <controls:Ripple
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RippleSpeed="0.7"
                                RippleMouseDownSpeed="0.1"
                                Padding="{TemplateBinding Padding}"/>
                        </controls:ClippingBorder>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="GridWrapper" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="Transparent">
                        <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <Path x:Name="arrow"
                                      Width="8" Height="8"
                                      Margin="0"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5"
                                      Data="M7,10L12,15L17,10H7Z"
                                      Fill="{TemplateBinding BorderBrush}" >
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="RotateArrow"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         To="180"
                                                         Storyboard.TargetName="RotateArrow"
                                                         Storyboard.TargetProperty="Angle"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="RotateArrow"
                                                         Storyboard.TargetProperty="Angle"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="CaretBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <ControlTemplate.Resources>

            <Storyboard x:Key="OutRect">
                <DoubleAnimation Storyboard.TargetName="AnimatedTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         Duration="0:0:0.3"
                                                         To="0"/>
            </Storyboard>
            <Storyboard x:Key="InRect">
                <DoubleAnimation Storyboard.TargetName="AnimatedTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         Duration="0:0:0.3"
                                                         To="1"/>
            </Storyboard>
        </ControlTemplate.Resources>

        <Grid x:Name="templateRoot" Margin="-8,-10,-8,0" SnapsToDevicePixels="true">
            <Border Name="PopupPlacement" VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <Popup x:Name="PART_Popup" AllowsTransparency="true"
                   Grid.ColumnSpan="2" 
                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   PlacementTarget="{Binding ElementName=PopupPlacement}"
                   PopupAnimation="Fade" Placement="Relative">
                <Grid Margin="10" x:Name="PopupContent" >
                    <Border  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                             Background="{DynamicResource BackgroundColorBrush}"
                        
                        x:Name="dropDownBorder" 
                        Effect="{StaticResource PopupSmallShadow}"
                             IsHitTestVisible="False" />
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="opaqueRect" Height="{Binding ElementName=templateRoot, Path=ActualHeight}" 
                                   IsHitTestVisible="False"
                                   Margin="0,0,0,5">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{Binding ElementName=templateRoot}" 
                                             AlignmentY="Bottom"
                                             AlignmentX="Left"
                                             Stretch="None"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ScrollViewer Grid.Row="1" x:Name="DropDownScrollViewer">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Grid>

                </Grid>

            </Popup>
            <Grid Margin="8,15,8,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}" 
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>

                <ContentControl IsTabStop="False" x:Name="FloatingHint"
                                IsHitTestVisible="False"
                                Content="{Binding Path=(helpers:TextHelper.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                HorizontalAlignment="Left"
                                Foreground="{TemplateBinding Background}"
                                FontSize="{TemplateBinding FontSize}"
                                Margin="0,3">
                    <ContentControl.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform x:Name="TranslateTransform" Y="{Binding ActualHeight, ElementName=FloatingHint, Converter={StaticResource SignPlusMinusConverter}}"/>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="0.9" ScaleY="{Binding Path=ScaleX, RelativeSource={RelativeSource Self}}"/>
                        </TransformGroup>
                    </ContentControl.RenderTransform>
                </ContentControl>

                <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="False" 
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                <TextBox x:Name="PART_EditableTextBox"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}" 
                         Style="{StaticResource ComboBoxEditableTextBox}" 
                         Visibility="Hidden"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

                <Rectangle Margin="{TemplateBinding Padding}" x:Name="BottomRect" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}" Height="1" VerticalAlignment="Bottom"/>
                <Rectangle Margin="{TemplateBinding Padding}" Grid.ColumnSpan="2" Fill="{TemplateBinding BorderBrush}"
                                        Height="2" VerticalAlignment="Bottom"
                                        RenderTransformOrigin="0.5,0.5">
                    <Rectangle.RenderTransform>
                        <ScaleTransform x:Name="AnimatedTransform" ScaleX="0"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <ContentControl IsTabStop="False"
                                Name="Description"
                                            Grid.Row="1" 
                                            Content="{Binding Path=(helpers:TextHelper.Description), RelativeSource={RelativeSource TemplatedParent}}"
                                            HorizontalAlignment="Left"
                                            Foreground="{DynamicResource SecondaryTextColorBrush}"
                                            FontSize="10"/>

                <ItemsControl Name="ErrorText" Visibility="Hidden" Grid.Row="1" Margin="0"
                              Focusable="False"
                              ItemsSource="{Binding (Validation.Errors) , RelativeSource={RelativeSource TemplatedParent}}">

                    <ItemsControl.ItemTemplate>
                        <DataTemplate >
                            <TextBlock Foreground="{StaticResource AttentionColorBrush}" 
                                       Text="{Binding ErrorContent}"
                                       TextWrapping ="Wrap"
                                       FontSize="11"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="Visibility" TargetName="contentPresenter" Value="Hidden"/>
                <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="False">
                <Setter TargetName="PopupContent" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" 
                        Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" 
                        Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="SelectedIndex" Value="-1" />
                    <Condition SourceName="PART_EditableTextBox" Property="IsKeyboardFocusWithin" Value="False"/>
                    <Condition SourceName="PART_EditableTextBox" Property="Text" Value=""/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" TargetName="FloatingHint" Value="{DynamicResource SecondaryTextColorBrush}"/>
                    <Setter Property="Tag" TargetName="BottomRect" Value="1"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="Tag" SourceName="BottomRect" Value="1">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.25"
                                                             To ="0"
                                                             Storyboard.TargetName="TranslateTransform"
                                                             Storyboard.TargetProperty="Y"
                                                             DecelerationRatio="0.5"/>
                                <DoubleAnimation Duration="0:0:0.25"
                                                             Storyboard.TargetName="ScaleTransform"
                                                             To ="1"
                                                             Storyboard.TargetProperty="ScaleX"/>

                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.25"
                                                             Storyboard.TargetName="TranslateTransform"
                                                             Storyboard.TargetProperty="Y"
                                                             AccelerationRatio="0.5"/>
                                <DoubleAnimation Duration="0:0:0.25"
                                                             Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleX"/>

                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource InRect}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource OutRect}"/>
                </Trigger.ExitActions>
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource BackgroundColorBrush}"/>
            </Trigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsKeyboardFocusWithin" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource InRect}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource OutRect}"/>
                </Trigger.ExitActions>
                <Setter Property="BorderBrush" 
                        Value="{Binding Background, RelativeSource={RelativeSource Self}}"/>

            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AttentionColorBrush}"/>
                <Setter Property="Foreground" TargetName="FloatingHint" Value="{StaticResource AttentionColorBrush}"/>
                <Setter TargetName="ErrorText" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Description" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WPRComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseControl}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DividerColorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColorBrush}"/>
        <Setter Property="Padding" Value="0,3,0,0"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource WPRComboBoxItemStyle}" />
    </Style>

</ResourceDictionary>