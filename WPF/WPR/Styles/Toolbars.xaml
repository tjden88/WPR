<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WPR.Controls"
                    xmlns:helpers="clr-namespace:WPR.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Base.xaml"/>
        <ResourceDictionary Source="Buttons.xaml"/>
        <ResourceDictionary Source="TextBlocks.xaml"/>
        <ResourceDictionary Source="Toggles.xaml"/>
        <ResourceDictionary Source="TextBoxes.xaml"/>
        <ResourceDictionary Source="ComboBoxes.xaml"/>
        <ResourceDictionary Source="RadioButtons.xaml"/>
        <ResourceDictionary Source="Menus.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WPRToolBarCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource WPRToggleButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="helpers:ButtonHelper.BorderRadius" Value="3"/>
        <Setter Property="Margin" Value="2,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DividerColorBrush}"/>
    </Style>

    <Style x:Key="WPRToolBarComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource WPRComboBox}">
        <Setter Property="Margin" Value="8 -2 8 0" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColorBrush}"/>
    </Style>

    <Style x:Key="WPRToolBarRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource WPRRadioButtonButtonStyle}">
        <Setter Property="helpers:ButtonHelper.BorderRadius" Value="3"/>
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Margin" Value="2,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DividerColorBrush}"/>
        <Setter Property="Effect" Value="{x:Null}"/>
    </Style>

    <Style x:Key="WPRToolBarSeparator" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource DividerColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DividerColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="MinWidth" Value="1"/>
        <Setter Property="Margin" Value="5,8"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WPRToolBarTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource WPRFlatTextBox}">
        <Setter Property="Margin" Value="8 4,8,2" />
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <Style x:Key="WPRToolBarToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource WPRToggleButton}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Margin" Value="2,4"/>
    </Style>

    <Style x:Key="WPRToolBarButton" TargetType="Button" BasedOn="{StaticResource WPRFlatButton}">
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="helpers:ButtonHelper.BorderRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DividerColorBrush}"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Margin" Value="2,4"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="MinHeight" Value="32"/>
    </Style>

    <Style x:Key="WPRToolBarTextBlock" TargetType="TextBlock" BasedOn="{StaticResource WPRTextBlock}">
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="WPRToolBarMenu" TargetType="Menu" BasedOn="{StaticResource WPRVerticalMenu}">
        <Style.Resources>
            <Style TargetType="MenuItem" BasedOn="{StaticResource WPRMenuItem}"/>
        </Style.Resources>
    </Style>

    <Style x:Key="WPRToolBarTray" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColorBrush}"/>
    </Style>



    <Style x:Key="WPRToolBar" TargetType="{x:Type ToolBar}" BasedOn="{StaticResource BaseControl}">
        <Style.Resources>
            <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource WPRToolBarCheckBox}"/>
            <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource WPRToolBarComboBox}"/>
            <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource WPRToolBarRadioButton}"/>
            <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator" BasedOn="{StaticResource WPRToolBarSeparator}"/>
            <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource WPRToolBarTextBox}"/>
            <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource WPRToolBarToggleButton}"/>
            <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button" BasedOn="{StaticResource WPRToolBarButton}"/>
            <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="Menu" BasedOn="{StaticResource WPRToolBarMenu}"/>
            <Style TargetType="TextBlock" BasedOn="{StaticResource WPRToolBarTextBlock}"/>
        </Style.Resources>

        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Padding" Value="0,5"></Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontSize="13" FontStyle="Italic" Margin="2"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">

                    <DockPanel x:Name="Grid" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid DockPanel.Dock="Right" x:Name="OverflowGrid" HorizontalAlignment="Right">
                            <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" 
                                          helpers:ButtonHelper.BorderRadius="3"
                                          Height="32"
                                          Width="32"
                                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasOverflowItems, Converter={StaticResource Bool2VisibilityConverter}}" 
                                          Foreground="{TemplateBinding Foreground}">
                                <controls:WPRIcon Source="DotsVertical"/>
                            </ToggleButton>
                            <Popup x:Name="OverflowPopup" 
                                   AllowsTransparency="true"
                                   Focusable="false" 
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="Scroll" 
                                   Placement="Bottom" 
                                   StaysOpen="false"
                                   Margin="1">
                                <!-- warning, this will cache the inner item as well, consider separating the shadow from the item if possible -->
                                <Popup.CacheMode>
                                    <BitmapCache EnableClearType="True" SnapsToDevicePixels="True"/>
                                </Popup.CacheMode>
                                <Border x:Name="ToolBarSubMenuBorder"
                                        BorderBrush="{DynamicResource AnimationEnterColorBrush}"
                                        BorderThickness="1" 
                                        Background="{DynamicResource SecondaryBackgroundColorBrush}"
                                        CornerRadius="3" Margin="10"
                                        Effect="{StaticResource PopupSmallShadow}">
                                    <Border Background="{StaticResource TransparentBrush}" Margin="2,6">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" 
                                                              KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="true" 
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              WrapWidth="200"/>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb"
                                       Margin="-3,-1,4,0"
                                       Padding="6,5,1,3" 
                                       Width="10">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
                                                <Rectangle Margin="0,5,0,5">
                                                    <Rectangle.Fill>
                                                        <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="{DynamicResource DividerColorBrush}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Cursor" Value="SizeAll"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                                <ContentPresenter x:Name="ToolBarHeader" 
                                                  ContentSource="Header" 
                                                  HorizontalAlignment="Center"
                                                  Margin="4,0"
                                                  TextBlock.FontSize="12"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center"/>
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,0,2,0"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                            <Setter Property="Margin" TargetName="ToolBarSubMenuBorder" Value="5,5,5,5"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                            <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>